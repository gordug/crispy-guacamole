@page "/genres/edit/{Id}"
@inject ILibraryService<GenreModel> GenreService
@inject NavigationManager NavigationManager 
<div class="display-2">Edit Genre</div>
@if (Genre is null)
{
    <div class="spinner-border" role="status">
    </div>
    <span class="sr-only">Loading...</span>
}
else
{
    <EditForm Model="Genre" OnValidSubmit="EditGenre">
        <div class="table">
            <div class="row">
                <div class="col-3">
                    <label for="genre" class="form-label">Genre</label>
                </div>
                <div class="col-9">
                    <InputText @bind-Value="Genre.Name" id="genre" class="form-text"/>
                    <ValidationMessage For="@(() => Genre.Name)"/>
                </div>
            </div>
            <div class="col-3">
                <button class="btn btn-success" type="submit">Edit Genre</button>
            </div>
        </div>
    </EditForm>
}

@code {

    [Parameter]
    public int Id { get; set; }

    private GenreModel? Genre { get; set; }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            if (Id <= 0)
            {
                NavigationManager.NavigateTo("/genres/add");
            }
            else
                Genre = GenreService.GetAsync(Id).Result;
            if (Genre is null)
            {
                NavigationManager.NavigateTo("/genres/add");
            }
            StateHasChanged();
        }
        base.OnAfterRender(firstRender);
    }

    private Task EditGenre()
    {
        GenreService.UpdateAsync(Genre);
        NavigationManager.NavigateTo("/genres");
        return Task.CompletedTask;
    }

}